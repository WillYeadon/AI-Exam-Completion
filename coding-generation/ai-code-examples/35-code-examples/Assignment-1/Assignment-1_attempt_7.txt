import numpy as np
import matplotlib.pyplot as plt

# Define the function f(x) = sin(2x)
def f(x):
    return np.sin(2*x)

# Define the analytical derivative of f
def f_derivative(x):
    return 2*np.cos(2*x)

# Implement the forward difference method for numerical differentiation
def numerical_derivative(f, x, dx):
    return (f(x+dx) - f(x)) / dx

# Define the range of x values
x = np.linspace(0, 2*np.pi, 100)

# Calculate the analytical derivative
analytical_derivative = f_derivative(x)

# Set different values of dx
dx_values = [0.1, 0.01, 0.001]

# Create the initial plot setup
plt.figure(figsize=(10, 6))

# Plot the difference between the analytical derivative and numerical derivative for each value of dx
for dx in dx_values:
    numerical_derivative_values = numerical_derivative(f, x, dx)
    difference = np.abs(analytical_derivative - numerical_derivative_values)
    plt.plot(x, difference, label=f'dx = {dx}')

plt.xlabel('x')
plt.ylabel('|Analytical Derivative - Numerical Derivative|')
plt.title('Difference between Analytical Derivative and Numerical Derivative')
plt.legend()
plt.show()