import numpy as np
import matplotlib.pyplot as plt

def f(x):
    return np.sin(2*x)

def df_dx_analytic(x):
    return 2*np.cos(2*x)

def forward_difference(f, x, dx):
    return (f(x+dx) - f(x)) / dx

# Define the x values
x = np.linspace(0, 2*np.pi, 100)

# Calculate the analytical and numerical derivatives
df_dx_analytical = df_dx_analytic(x)
df_dx_too_large = forward_difference(f, x, dx=1.0)
df_dx_about_right = forward_difference(f, x, dx=0.1)
df_dx_too_small = forward_difference(f, x, dx=0.001)

# Plot the results
plt.figure(figsize=(10, 6))
plt.plot(x, df_dx_analytical - df_dx_too_large, label='dx too large')
plt.plot(x, df_dx_analytical - df_dx_about_right, label='about right dx')
plt.plot(x, df_dx_analytical - df_dx_too_small, label='dx too small')
plt.legend()
plt.xlabel('x')
plt.ylabel('Difference')
plt.title('Difference between Analytical and Numerical Derivatives')
plt.grid(True)
plt.show()