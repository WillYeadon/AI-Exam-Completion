import numpy as np
import matplotlib.pyplot as plt

class Walker:
    def __init__(self, ndim=1, step_size=1):
        self.ndim = ndim
        self.step_size = step_size
        self.pos = np.zeros(ndim)
        
        if ndim == 1:
            self.steps = [[step_size], [-step_size]]
        elif ndim == 2:
            self.steps = [[step_size, 0], [-step_size, 0], [0, step_size], [0, -step_size]]
        else:
            raise ValueError("Only 1D and 2D walkers supported")
    
    def pickStep(self):
        return self.steps[np.random.randint(len(self.steps))]
    
    def doSteps(self, n):
        trajectory = np.zeros((n+1, self.ndim))
        for i in range(1, n+1):
            step = self.pickStep()
            self.pos += step
            trajectory[i] = self.pos
        return trajectory

# Parameters
num_walkers = 100
num_steps = 1000

# Simulate the walkers
trajectories = np.zeros((num_walkers, num_steps+1))

for i in range(num_walkers):
    walker = Walker()
    trajectory = walker.doSteps(num_steps)
    trajectories[i] = trajectory.flatten()

# Calculate average position and average squared position
average_position = np.mean(trajectories, axis=0)
average_squared_position = np.mean(trajectories**2, axis=0)

# Plotting
plt.figure(figsize=(10, 6))

plt.plot(average_position, label='Average Position')
plt.plot(average_squared_position, label='Average Squared Position')

plt.title('Average Position and Average Squared Position of 1D Walkers')
plt.xlabel('Steps')
plt.ylabel('Position')

plt.legend()
plt.grid(True)
plt.show()