import numpy as np
import matplotlib.pyplot as plt

# Define the given probability density function
def f(x):
    return 1/(1 + 2/(1+x**2) + np.cos(np.sqrt(3*x))**2)

# Generate sample values according to the given probability density function
def genSample(num_points):
    x = np.linspace(0, 10, num_points)
    f_max = np.max(f(x))
    sample = []
    while len(sample) < num_points:
        x_ = np.random.uniform(0, 10)
        y_ = np.random.uniform(0, f_max)
        if y_ < f(x_):
            sample.append(x_)
    return np.array(sample)

# Generate and plot the distribution of values
sample_values = genSample(1000)

plt.figure(figsize=(10, 6))
plt.hist(sample_values, bins=30, edgecolor='black', alpha=0.7)
plt.title("Distribution of Values Generated by genSample()")
plt.xlabel("x")
plt.ylabel("Frequency")
plt.grid(True)
plt.show()