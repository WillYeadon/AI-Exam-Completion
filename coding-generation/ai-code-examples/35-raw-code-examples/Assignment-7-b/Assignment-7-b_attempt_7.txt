import numpy as np
import matplotlib.pyplot as plt

# Define the Rosenbrock's Banana Function
def banana(r):
    x, y = r
    return (1 - x)**2 + 100*(y - x**2)**2

# Define the gradient of the Rosenbrock's Banana Function
def banana_grad(r):
    x, y = r
    grad_x = -2*(1 - x) - 400*x*(y - x**2)
    grad_y = 200*(y - x**2)
    return np.array([grad_x, grad_y])

# Initialize parameters for the banana function plot
x = np.linspace(-2, 2, 100)
y = np.linspace(-1, 3, 100)
X, Y = np.meshgrid(x, y)
data = np.zeros_like(X)

# Implement the banana function on data
for i in range(len(x)):
    for j in range(len(y)):
        data[j, i] = banana([x[i], y[j]])

# Plot starter code
plt.figure()
plt.contourf(X, Y, data, levels=50, cmap='RdGy')
plt.colorbar(label='Banana Function Value')
plt.xlabel('x')
plt.ylabel('y')
plt.title("Optimization Path of Gradient Descent on Rosenbrock's Banana Function")
plt.legend()
plt.show()