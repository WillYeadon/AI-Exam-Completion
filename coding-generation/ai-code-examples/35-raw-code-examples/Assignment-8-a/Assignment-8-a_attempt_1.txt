import numpy as np
import matplotlib.pyplot as plt

class Walker:
    def __init__(self, ndim=1, step_size=1):
        self.ndim = ndim
        self.step_size = step_size
        if ndim == 1:
            self.steps = [[self.step_size], [-self.step_size]]
        elif ndim == 2:
            self.steps = [[self.step_size, 0], [-self.step_size, 0], [0, self.step_size], [0, -self.step_size]]
        self.pos = np.zeros(ndim)
    
    def pickStep(self):
        return self.steps[np.random.randint(0, len(self.steps))]
    
    def doSteps(self, n):
        trajectory = np.zeros((n+1, self.ndim))
        trajectory[0] = self.pos
        for i in range(1, n+1):
            step = self.pickStep()
            self.pos += step
            trajectory[i] = self.pos
        return trajectory

# Create 100 1D walkers
n_walkers = 100
n_steps = 1000
walkers = [Walker() for _ in range(n_walkers)]

# Perform 1000 steps for each walker
positions = np.zeros((n_walkers, n_steps+1))
for i in range(n_walkers):
    positions[i] = walkers[i].doSteps(n_steps)[:, 0]

# Calculate average position and average squared position
avg_position = np.mean(positions, axis=0)
avg_squared_position = np.mean(positions**2, axis=0)

# Plot average position and average squared position
plt.figure(figsize=(12, 6))
plt.plot(avg_position, label='Average Position')
plt.plot(avg_squared_position, label='Average Squared Position')
plt.legend()
plt.title('Average Position and Average Squared Position of 100 1D Walkers')
plt.xlabel('Number of Steps')
plt.ylabel('Position')
plt.grid(True)
plt.show()