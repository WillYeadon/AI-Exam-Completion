import numpy as np
import matplotlib.pyplot as plt

class Walker:
    def __init__(self, steps):
        self.steps = steps
        self.positions = np.zeros(steps)
        
    def walk(self):
        for i in range(1, self.steps):
            step = np.random.choice([-1, 1])
            self.positions[i] = self.positions[i-1] + step
            
    def get_average_position(self):
        return np.mean(self.positions)
    
    def get_average_squared_position(self):
        return np.mean(self.positions**2)

# Simulate 100 1D walkers, each with 1000 steps
num_walkers = 100
num_steps = 1000

average_positions = np.zeros(num_steps)
average_squared_positions = np.zeros(num_steps)

for _ in range(num_walkers):
    walker = Walker(num_steps)
    walker.walk()
    
    average_positions += walker.positions
    average_squared_positions += walker.positions**2

average_positions /= num_walkers
average_squared_positions /= num_walkers

# Plot the average position and average squared position
plt.figure(figsize=(12, 6))
plt.plot(average_positions, label='Average Position', color='blue', linestyle='-')
plt.plot(average_squared_positions, label='Average Squared Position', color='red', linestyle='--')

plt.legend()
plt.title('Average Position and Average Squared Position of 100 1D Walkers')
plt.xlabel('Number of Steps')
plt.ylabel('Position')

plt.show()