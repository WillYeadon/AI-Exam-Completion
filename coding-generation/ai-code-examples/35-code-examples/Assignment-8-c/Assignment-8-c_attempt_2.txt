import numpy as np
import matplotlib.pyplot as plt

# Define Walker class
class Walker:
    def __init__(self):
        self.position = np.random.rand(2)

# Initialize 1000 walkers
num_walkers = 1000
walkers = [Walker() for _ in range(num_walkers)]

# Initial positions of the walkers
rand_pos = np.array([walker.position for walker in walkers])

# Initial scatter plot for starting positions
plt.figure(figsize=(15, 5))

plt.subplot(1, 3, 1)
plt.scatter(rand_pos[:, 0], rand_pos[:, 1], color='b', alpha=0.5)
plt.title("Starting positions")
plt.xlabel("X")
plt.ylabel("Y")

# Simulate the diffusion of walkers
for step in [10, 100, 500]:
    for walker in walkers:
        for _ in range(step):
            direction = np.random.rand(2) - 0.5
            direction /= np.linalg.norm(direction)
            walker.position += 0.05 * direction

    positions = np.array([walker.position for walker in walkers])

    plt.subplot(1, 3, [1, 2, 3][[10, 100, 500].index(step)])
    plt.scatter(positions[:, 0], positions[:, 1], alpha=0.5, label=f"{step} steps")

plt.show()