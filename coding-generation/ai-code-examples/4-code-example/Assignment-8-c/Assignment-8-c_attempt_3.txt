import numpy as np
import matplotlib.pyplot as plt

class Walker:
    def __init__(self, rand_pos, step_size=0.05):
        self.positions = rand_pos
        self.step_size = step_size

    def step(self):
        angles = 2 * np.pi * np.random.rand(len(self.positions), 1)
        steps = self.step_size * np.hstack((np.cos(angles), np.sin(angles)))
        self.positions += steps
        
    def get_positions(self):
        return self.positions

# Initialize the random positions
rand_pos = np.random.rand(1000, 2)
walker = Walker(rand_pos)

# Plot the initial positions
plt.figure(figsize=(18, 6))

# After 10 steps
for _ in range(10):
    walker.step()
positions_10 = walker.get_positions()
plt.subplot(1, 3, 1)
plt.scatter(positions_10[:, 0], positions_10[:, 1], alpha=0.5, color='blue')
plt.title('Positions after 10 steps')
plt.xlabel('X')
plt.ylabel('Y')

# After 100 steps
for _ in range(90):  # Already stepped 10 times
    walker.step()
positions_100 = walker.get_positions()
plt.subplot(1, 3, 2)
plt.scatter(positions_100[:, 0], positions_100[:, 1], alpha=0.5, color='green')
plt.title('Positions after 100 steps')
plt.xlabel('X')
plt.ylabel('Y')

# After 500 steps
for _ in range(400):  # Already stepped 100 times
    walker.step()
positions_500 = walker.get_positions()
plt.subplot(1, 3, 3)
plt.scatter(positions_500[:, 0], positions_500[:, 1], alpha=0.5, color='red')
plt.title('Positions after 500 steps')
plt.xlabel('X')
plt.ylabel('Y')

plt.tight_layout()
plt.show()