import numpy as np
import matplotlib.pyplot as plt

# Constants for Uranium-238
TAU = 4.468 * 1e9  # Mean lifetime (in years)
HALF_LIFE = 4.468 * 1e9  # Half-life (in years)

# Mean lifetime from half life
def mean_lifetime(half_life):
    return half_life / np.log(2)

# f_rad function
def f_rad(N, t):
    return -N / TAU

# Analytic solution
def analytic(N0, t):
    return N0 * np.exp(-t / TAU)

# Euler method
def solve_euler(n0, t0, dt, n_steps):
    times = np.linspace(t0, t0 + n_steps * dt, n_steps + 1)
    values = np.zeros(n_steps + 1)
    values[0] = n0
    for i in range(1, n_steps + 1):
        values[i] = values[i-1] + dt * f_rad(values[i-1], times[i-1])
    return values

# RK4 method
def solve_RK4(n0, t0, dt, n_steps):
    times = np.linspace(t0, t0 + n_steps * dt, n_steps + 1)
    values = np.zeros(n_steps + 1)
    values[0] = n0
    for i in range(1, n_steps + 1):
        k1 = dt * f_rad(values[i-1], times[i-1])
        k2 = dt * f_rad(values[i-1] + 0.5 * k1, times[i-1] + 0.5 * dt)
        k3 = dt * f_rad(values[i-1] + 0.5 * k2, times[i-1] + 0.5 * dt)
        k4 = dt * f_rad(values[i-1] + k3, times[i-1] + dt)
        values[i] = values[i-1] + (k1 + 2 * k2 + 2 * k3 + k4) / 6
    return values

# Create a plot to show that the RK4 method has an error that scales better with the number of steps than the Euler method.

# Parameters for simulation
n0 = 1e5  # Initial number of atoms
t0 = 0  # Initial time
dt = 1e8  # Time step (years)
n_steps = 50  # Number of steps

# Compute analytic solution
t_vals = np.linspace(t0, t0 + n_steps * dt, n_steps + 1)
analytic_vals = analytic(n0, t_vals)

# Compute solutions using Euler and RK4
euler_vals = solve_euler(n0, t0, dt, n_steps)
rk4_vals = solve_RK4(n0, t0, dt, n_steps)

# Compute errors
euler_error = np.abs(analytic_vals - euler_vals)
rk4_error = np.abs(analytic_vals - rk4_vals)

# Plot results
plt.figure(figsize=(10, 6))
plt.plot(t_vals, euler_error, label='Euler Method Error')
plt.plot(t_vals, rk4_error, label='RK4 Method Error')
plt.yscale('log')
plt.xlabel('Time (years)')
plt.ylabel('Error')
plt.legend()
plt.title('Error Comparison of Euler and RK4 Methods')
plt.show()