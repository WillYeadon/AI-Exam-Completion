import numpy as np
import matplotlib.pyplot as plt

# Define the function f(x) = sin(2x)
def f(x):
    return np.sin(2*x)

# Define the analytic derivative of the function f
def f_derivative(x):
    return 2*np.cos(2*x)

# Define the numerical derivative using the forward difference method
def forward_difference(f, x, dx):
    return (f(x+dx) - f(x)) / dx

# Define the range of x values
x = np.linspace(0, 2*np.pi, 100)

# Calculate the analytical derivative
f_derivative_values = f_derivative(x)

# Initialize lists to store the differences for different dx values
dx_too_large = []
dx_about_right = []
dx_too_small = []

# Calculate and store the differences for each dx value
for i in range(len(x)):
    dx_too_large.append(f_derivative(x[i]) - forward_difference(f, x[i], dx=0.5))
    dx_about_right.append(f_derivative(x[i]) - forward_difference(f, x[i], dx=0.1))
    dx_too_small.append(f_derivative(x[i]) - forward_difference(f, x[i], dx=0.01))

# Plot the differences for different dx values
plt.figure(figsize=(10, 6))
plt.plot(x, dx_too_large, label='dx too large')
plt.plot(x, dx_about_right, label='dx about right')
plt.plot(x, dx_too_small, label='dx too small')
plt.legend()
plt.xlabel('x')
plt.ylabel('Difference')
plt.title('Difference between Analytical and Numerical Derivative')
plt.grid(True)
plt.show()