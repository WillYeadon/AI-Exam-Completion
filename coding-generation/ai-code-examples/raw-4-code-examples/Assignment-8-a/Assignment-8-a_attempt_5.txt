import numpy as np
import matplotlib.pyplot as plt
import random

class Walker:
    def __init__(self, ndim=1, s=1):
        self.ndim = ndim
        self.s = s
        if self.ndim == 1:
            self.possible_steps = [[s], [-s]]
        elif self.ndim == 2:
            self.possible_steps = [[s, 0], [-s, 0], [0, s], [0, -s]]
        else:
            raise ValueError("Only 1D and 2D walkers are supported.")
        self.pos = np.zeros(self.ndim, dtype=int)
        
    def pickStep(self):
        return random.choice(self.possible_steps)
    
    def doSteps(self, n):
        trajectory = np.zeros((n+1, self.ndim), dtype=int)
        for i in range(n):
            step = self.pickStep()
            self.pos = self.pos + step
            trajectory[i+1] = self.pos
        return trajectory

# Parameters
num_walkers = 100
num_steps = 1000

# Running the simulation
positions = np.zeros((num_walkers, num_steps + 1))
squared_positions = np.zeros((num_walkers, num_steps + 1))

for i in range(num_walkers):
    walker = Walker()
    trajectory = walker.doSteps(num_steps)
    positions[i, :] = trajectory[:, 0]
    squared_positions[i, :] = np.square(trajectory[:, 0])

# Calculating averages
average_position = np.mean(positions, axis=0)
average_squared_position = np.mean(squared_positions, axis=0)

# Plotting the results
plt.figure(figsize=(10, 5))
plt.plot(average_position, label='Average Position')
plt.plot(average_squared_position, label='Average Squared Position')
plt.title('Average Position and Average Squared Position of 100 1D Walkers')
plt.xlabel('Steps')
plt.ylabel('Position')
plt.legend()
plt.grid(True)
plt.show()