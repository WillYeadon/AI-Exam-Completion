import numpy as np
import matplotlib.pyplot as plt

# Define the function f(x) = sin(2x)
def f(x):
    return np.sin(2*x)

# Define the analytical derivative of f
def f_prime(x):
    return 2*np.cos(2*x)

# Define the numerical derivative using the forward difference method
def forward_difference(f, x, dx):
    return (f(x+dx) - f(x)) / dx

# Values for x
x = np.linspace(0, 2*np.pi, 100)

# Calculate the analytical derivative at x
f_prime_values = f_prime(x)

# Calculate the numerical derivative at x using different dx values
numerical_dx_large = forward_difference(f, x, 0.5)
numerical_dx_just_right = forward_difference(f, x, 0.1)
numerical_dx_small = forward_difference(f, x, 0.01)

# Plotting the results
plt.figure(figsize=(12, 6))
plt.plot(x, f_prime_values - numerical_dx_large, label='dx too large')
plt.plot(x, f_prime_values - numerical_dx_just_right, label='dx about right')
plt.plot(x, f_prime_values - numerical_dx_small, label='dx too small')
plt.xlabel('x')
plt.ylabel('Difference')
plt.title('Difference between Analytical and Numerical Derivative')
plt.legend()
plt.grid(True)
plt.show()