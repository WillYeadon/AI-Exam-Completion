import numpy as np
import matplotlib.pyplot as plt

def f(x):
    return np.sin(2*x)

def dfdx_analytic(x):
    return 2*np.cos(2*x)

def forward_difference(f, x, dx):
    return (f(x+dx) - f(x)) / dx

x = np.linspace(0, 2*np.pi, 100)
dx_large = 1.0
dx_right = 0.1
dx_small = 0.01

diff_large = dfdx_analytic(x) - forward_difference(f, x, dx_large)
diff_right = dfdx_analytic(x) - forward_difference(f, x, dx_right)
diff_small = dfdx_analytic(x) - forward_difference(f, x, dx_small)

plt.figure(figsize=(10, 6))
plt.plot(x, diff_large, label='dx too large')
plt.plot(x, diff_right, label='dx about right')
plt.plot(x, diff_small, label='dx too small')
plt.xlabel('x')
plt.ylabel('Difference')
plt.title('Difference between Analytical and Numerical Derivative')
plt.legend()
plt.grid()
plt.show()