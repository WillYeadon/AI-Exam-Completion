import numpy as np
import matplotlib.pyplot as plt

# Define the function f(x) = sin(2x)
def f(x):
    return np.sin(2*x)

# Define the analytical derivative of f(x)
def analytical_derivative(x):
    return 2 * np.cos(2*x)

# Numerical derivative using forward difference method
def forward_difference(f, x, dx):
    return (f(x+dx) - f(x)) / dx

# Generate data for plotting
x = np.linspace(0, 2*np.pi, 100)
dx_too_large = forward_difference(f, x, dx=1.0)
dx_about_right = forward_difference(f, x, dx=0.1)
dx_too_small = forward_difference(f, x, dx=0.01)

# Plotting
plt.figure(figsize=(10, 6))
plt.plot(x, analytical_derivative(x) - dx_too_large, label='dx too large')
plt.plot(x, analytical_derivative(x) - dx_about_right, label='dx about right')
plt.plot(x, analytical_derivative(x) - dx_too_small, label='dx too small')
plt.xlabel('x')
plt.ylabel('Difference')
plt.title('Difference between Analytical and Numerical Derivative')
plt.legend()
plt.grid(True)
plt.show()