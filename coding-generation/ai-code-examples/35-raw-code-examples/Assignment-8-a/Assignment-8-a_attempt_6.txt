import numpy as np
import matplotlib.pyplot as plt

# Define the Walker class
class Walker:
    def __init__(self, ndim=1, step_size=1):
        self.pos = np.zeros(ndim)
        if ndim == 1:
            self.steps = np.array([[step_size], [-step_size]])
        elif ndim == 2:
            self.steps = np.array([[step_size, 0], [-step_size, 0], [0, step_size], [0, -step_size]])
    
    def pickStep(self):
        return self.steps[np.random.randint(0, len(self.steps))]
    
    def doSteps(self, n):
        trajectory = [self.pos]
        for _ in range(n):
            step = self.pickStep()
            self.pos = self.pos + step
            trajectory.append(self.pos)
        return np.array(trajectory)

# Function to generate the plot
def plot_walkers_avg_position(ndim, nwalkers, nsteps):
    avg_position = np.zeros(nsteps+1)
    avg_sq_position = np.zeros(nsteps+1)
    
    for _ in range(nwalkers):
        walker = Walker(ndim=ndim)
        trajectory = walker.doSteps(nsteps)
        avg_position += trajectory.sum(axis=1)
        avg_sq_position += (trajectory**2).sum(axis=1)
    
    avg_position /= nwalkers
    avg_sq_position /= nwalkers
    
    plt.figure(figsize=(10, 6))
    plt.plot(avg_position, label='Average Position')
    plt.plot(avg_sq_position, label='Average Squared Position')
    plt.legend()
    plt.title('Average Position and Average Squared Position of 100 1D Walkers')
    plt.xlabel('Number of Steps')
    plt.ylabel('Position')
    plt.grid(True)
    plt.show()