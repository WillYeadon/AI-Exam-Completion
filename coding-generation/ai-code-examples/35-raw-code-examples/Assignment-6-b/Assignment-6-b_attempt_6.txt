import numpy as np
import matplotlib.pyplot as plt

# Function to generate sample values according to a given probability density function
def genSample(npts):
    # Define the function f(x)
    def f(x):
        return 1/(1 + 2/(1+x**2) + np.cos(np.sqrt(3*x))**2)
    
    # Integral of f(x) from 0 to 10
    N, _ = quad(f, 0, 10)
    
    # Generate random x values between 0 and 10
    x_values = np.random.uniform(0, 10, npts)
    
    # Calculate the maximum value of f(x) to use as an upper bound for y values
    f_max = max([f(x) for x in np.linspace(0, 10, 1000)])
    
    # Generate random y values between 0 and f_max
    y_values = np.random.uniform(0, f_max, npts)

    # Accept values of x where y is less than f(x)
    accepted_x = [x_values[i] for i in range(npts) if y_values[i] < f(x_values[i])]
    
    return accepted_x

# Generate sample values
npts = 1000
sample_values = genSample(npts)

# Plotting the generated sample values
plt.figure(figsize=(8, 6))
plt.hist(sample_values, bins=30, color='skyblue', edgecolor='black', alpha=0.7)
plt.title('Distribution of sample values generated according to the given PDF')
plt.xlabel('x values')
plt.ylabel('Frequency')
plt.grid(axis='y', alpha=0.75)
plt.show()