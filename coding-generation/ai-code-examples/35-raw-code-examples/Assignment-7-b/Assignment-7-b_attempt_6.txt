import numpy as np
import matplotlib.pyplot as plt

# Function definitions
def banana(r):
    x, y = r
    return (1 - x)**2 + 100*(y - x**2)**2

def banana_grad(r):
    x, y = r
    grad_x = -2*(1 - x) - 400*x*(y - x**2)
    grad_y = 200*(y - x**2)
    return np.array([grad_x, grad_y])

# Initialize parameters for the banana function plot
n = 100
x = np.linspace(-2, 2, n)
y = np.linspace(-1, 3, n)
X, Y = np.meshgrid(x, y)
data = np.zeros((n, n))

# Implement the banana function on data
for i in range(n):
    for j in range(n):
        data[i, j] = banana([X[i, j], Y[i, j]])

# Plot
plt.figure(figsize=(10, 8))
plt.contourf(X, Y, data, levels=np.logspace(0, 5, 35), cmap='RdGy')
plt.colorbar(label='Cost function')
plt.title("Optimization Path of Gradient Descent on Rosenbrock's Banana Function")
plt.xlabel('x')
plt.ylabel('y')
plt.legend()
plt.show()